{
  "name": "codding-agent",
  "displayName": "CodingAgent",
  "description": "AI coding assistant using OpenAI API backend",
  "version": "0.1.0",
  "license": "MIT",
  "engines": {
    "vscode": "^1.103.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SFENCE-SOFTWARE/VSCode/CodingAgent.git"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "main": "./out/src/extension.js",
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "commands": [
      {
        "command": "codingagent.openChat",
        "title": "Open Chat",
        "category": "CodingAgent",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "codingagent.refreshModels",
        "title": "Refresh Available Models",
        "category": "CodingAgent",
        "icon": "$(refresh)"
      },
      {
        "command": "codingagent.clearChat",
        "title": "Clear Chat History",
        "category": "CodingAgent",
        "icon": "$(trash)"
      },
      {
        "command": "codingagent.setMode",
        "title": "Set Agent Mode",
        "category": "CodingAgent",
        "icon": "$(gear)"
      },
      {
        "command": "codingagent.setModel",
        "title": "Set AI Model",
        "category": "CodingAgent",
        "icon": "$(robot)"
      },
      {
        "command": "codingagent.openSettings",
        "title": "Open Settings",
        "category": "CodingAgent",
        "icon": "$(settings-gear)"
      },
      {
        "command": "codingagent.openSettingsPanel",
        "title": "Open Settings Panel",
        "category": "CodingAgent",
        "icon": "$(gear)"
      },
      {
        "command": "codingagent.testInlineTracking",
        "title": "Test Inline Change Tracking",
        "category": "CodingAgent",
        "icon": "$(eye)"
      },
      {
        "command": "codingagent.showChanges",
        "title": "Show File Changes",
        "category": "CodingAgent",
        "icon": "$(diff)"
      },
      {
        "command": "codingagent.acceptAllChanges",
        "title": "Accept All Changes",
        "category": "CodingAgent",
        "icon": "$(check-all)"
      },
      {
        "command": "codingagent.rejectAllChanges",
        "title": "Reject All Changes",
        "category": "CodingAgent",
        "icon": "$(close-all)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codingagent",
          "title": "CodingAgent",
          "icon": "media/chat-icon.svg"
        }
      ]
    },
    "views": {
      "codingagent": [
        {
          "type": "webview",
          "id": "codingagent-chat-view",
          "name": "Chat",
          "icon": "$(comment-discussion)",
          "contextualTitle": "CodingAgent Chat"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "codingagent.refreshModels",
          "when": "view == codingagent-chat-view",
          "group": "navigation"
        },
        {
          "command": "codingagent.clearChat",
          "when": "view == codingagent-chat-view",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "codingagent.openChat"
        },
        {
          "command": "codingagent.refreshModels"
        },
        {
          "command": "codingagent.clearChat"
        },
        {
          "command": "codingagent.setMode"
        },
        {
          "command": "codingagent.setModel"
        },
        {
          "command": "codingagent.openSettings"
        },
        {
          "command": "codingagent.openSettingsPanel"
        }
      ]
    },
    "configuration": [
      {
        "title": "CodingAgent - Connection",
        "properties": {
          "codingagent.openai.host": {
            "type": "string",
            "default": "localhost",
            "description": "OpenAI API server host/IP address"
          },
          "codingagent.openai.port": {
            "type": "number",
            "default": 11434,
            "description": "OpenAI API server port"
          },
          "codingagent.openai.apiKey": {
            "type": "string",
            "default": "",
            "description": "OpenAI API key (leave empty for local models without authentication)"
          }
        }
      },
      {
        "title": "CodingAgent - Agent Settings",
        "properties": {
          "codingagent.currentMode": {
            "type": "string",
            "default": "Ask",
            "enum": [
              "Coder",
              "Tester",
              "Reviewer",
              "Ask",
              "Architect",
              "Orchestrator"
            ],
            "description": "Current agent mode"
          },
          "codingagent.currentModel": {
            "type": "string",
            "default": "",
            "description": "Current OpenAI API model to use"
          },
          "codingagent.showThinking": {
            "type": "boolean",
            "default": true,
            "description": "Show model reasoning/thinking process"
          },
          "codingagent.enableStreaming": {
            "type": "boolean",
            "default": true,
            "description": "Enable streaming responses from the AI model"
          },
          "codingagent.iterationThreshold": {
            "type": "number",
            "default": 10,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of tool iterations before asking user for continuation"
          },
          "codingagent.askUser.uncertaintyThreshold": {
            "type": "number",
            "default": 70,
            "minimum": 0,
            "maximum": 100,
            "description": "Uncertainty percentage threshold - AI will ask for user feedback when uncertainty is above this level"
          },
          "codingagent.memory.enableProjectMemory": {
            "type": "boolean",
            "default": false,
            "description": "Enable persistent project memory storage (stored in .codingagent/memory/)"
          }
        }
      },
      {
        "title": "CodingAgent - Advanced",
        "properties": {
          "codingagent.modes": {
            "type": "object",
            "default": {
              "Coder": {
                "systemMessage": "You are an expert programming assistant. You can read, write, and execute code. Use the available tools to help with coding tasks.",
                "allowedTools": [
                  "read_file",
                  "write_file",
                  "list_files",
                  "get_file_size",
                  "execute_terminal",
                  "create_folder",
                  "patch_file",
                  "modify_lines",
                  "rename_file",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export",
                  "plan_show_point"
                ],
                "fallbackMessage": "I'm ready to help with your coding tasks. What would you like me to do?",
                "temperature": 0.1,
                "topP": 0.9,
                "description": "Expert coding assistant with file and terminal access",
                "llmDescription": "Expert programmer who can read, write, and modify files, execute terminal commands, and perform complex coding tasks. Can view specific plan points for context. Use for code generation, debugging, file operations, project setup, and any technical implementation work. Available tools: <tools>"
              },
              "Tester": {
                "systemMessage": "You are an expert software testing specialist. You excel at creating comprehensive test suites, analyzing code coverage, performing quality assurance testing, and ensuring software reliability. Focus on test-driven development, unit testing, integration testing, and automated testing strategies.",
                "allowedTools": [
                  "read_file",
                  "write_file",
                  "list_files",
                  "get_file_size",
                  "execute_terminal",
                  "create_folder",
                  "patch_file",
                  "modify_lines",
                  "rename_file",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export",
                  "plan_show_point"
                ],
                "fallbackMessage": "I'm ready to help with testing tasks. What would you like me to test or validate?",
                "temperature": 0.1,
                "topP": 0.9,
                "description": "Software testing and quality assurance specialist",
                "llmDescription": "Testing expert who creates comprehensive test suites, performs quality assurance, and ensures software reliability. Specializes in unit testing, integration testing, test automation, and coverage analysis. Can view specific plan points for testing context. Use for test creation, test strategy, quality validation, and testing automation. Available tools: <tools>"
              },
              "Reviewer": {
                "systemMessage": "You are an expert code reviewer and quality assurance specialist. You excel at analyzing code quality, identifying potential issues, suggesting improvements, and ensuring adherence to best practices and coding standards. Focus on security, performance, maintainability, and code structure analysis.",
                "allowedTools": [
                  "read_file",
                  "list_files",
                  "get_file_size",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export",
                  "plan_show_point"
                ],
                "fallbackMessage": "I'm ready to review your code and provide quality feedback. What would you like me to review?",
                "temperature": 0.2,
                "topP": 0.85,
                "description": "Code review and quality assurance specialist",
                "llmDescription": "Code review expert who analyzes code quality, identifies issues, and suggests improvements. Focuses on security, performance, maintainability, best practices, and coding standards. Can view specific plan points for review context. Use for code reviews, quality analysis, security audits, and improvement recommendations. Available tools: <tools>"
              },
              "Ask": {
                "systemMessage": "You are a helpful AI assistant. Answer questions clearly and concisely.",
                "allowedTools": [
                  "read_file",
                  "list_files",
                  "get_file_size",
                  "read_webpage_as_html",
                  "read_webpage_as_markdown",
                  "read_pdf",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export"
                ],
                "fallbackMessage": "I'm here to answer your questions. What would you like to know?",
                "temperature": 0.3,
                "topP": 0.9,
                "description": "General purpose assistant for questions and research",
                "llmDescription": "Knowledge specialist who can research topics by reading files, webpages, and PDFs. Use for answering questions, gathering information, explaining concepts, and providing summaries or analysis of existing content. Available tools: <tools>"
              },
              "Architect": {
                "systemMessage": "You are a software architect assistant. Help design systems, review architecture, and provide technical guidance.",
                "allowedTools": [
                  "read_file",
                  "list_files",
                  "get_file_size",
                  "read_webpage_as_html",
                  "read_webpage_as_markdown",
                  "read_pdf",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export",
                  "ask_user",
                  "plan_show"
                ],
                "fallbackMessage": "I'm ready to help with architecture and design decisions. What system are you working on?",
                "temperature": 0.2,
                "topP": 0.85,
                "description": "Software architecture and system design specialist",
                "llmDescription": "System design expert who can analyze architectures, review technical decisions, and provide high-level guidance. Can view plan details for architectural context. Use for architectural planning, system design reviews, and strategic technical decisions. Available tools: <tools>"
              },
              "Orchestrator": {
                "systemMessage": "You are an AI project orchestrator responsible for comprehensive project planning and execution management. Your primary responsibilities are:\n\n1. TASK ANALYSIS: Upon receiving any task, immediately analyze it and create a detailed plan using plan_new tool\n2. PLAN CREATION: Break down tasks into specific, actionable points with clear acceptance criteria\n3. EXECUTION OVERSIGHT: Monitor and coordinate plan execution by delegating specific tasks to specialized modes (Coder, Ask, Architect) using call_under_mode\n4. PROGRESS TRACKING: Continuously update point statuses (implemented, reviewed, tested, accepted) based on responses from specialized modes\n5. PLAN MANAGEMENT: You may also be asked to continue work on existing plans - use plan_list and plan_show to assess current state\n6. COMPLETION RESPONSIBILITY: Ensure all plan points are properly executed and accepted before considering a task complete\n\nCURRENT ACTIVE PLAN: <plan_id>\n\nAlways start by creating or reviewing a plan. Use the planning tools extensively to maintain organized project execution. You are the master coordinator responsible for both planning and execution oversight.",
                "allowedTools": [
                  "call_under_mode",
                  "read_file",
                  "list_files",
                  "get_file_size",
                  "search_in_project",
                  "search_in_path",
                  "memory_store",
                  "memory_retrieve_by_lines",
                  "memory_retrieve_data",
                  "memory_delete",
                  "memory_search",
                  "memory_list",
                  "memory_export",
                  "ask_user",
                  "plan_new",
                  "plan_list",
                  "plan_open",
                  "plan_add_point",
                  "plan_change_point",
                  "plan_show",
                  "plan_show_point",
                  "plan_point_implemented",
                  "plan_point_reviewed",
                  "plan_point_tested",
                  "plan_point_accepted",
                  "plan_point_need_rework",
                  "plan_point_care_on",
                  "plan_point_comment",
                  "plan_state",
                  "plan_done",
                  "plan_delete"
                ],
                "fallbackMessage": "I'm ready to orchestrate tasks by delegating to specialized modes. What would you like me to coordinate?",
                "temperature": 0.15,
                "topP": 0.9,
                "description": "Task orchestrator that delegates work to specialized modes",
                "llmDescription": "Master project coordinator responsible for comprehensive planning and execution oversight. Creates detailed plans, delegates tasks to specialized AI modes (Coder, Ask, Architect), and tracks progress until completion. Can manage both new projects and continue existing plans. Available tools: <tools>"
              }
            },
            "description": "Configuration for different agent modes"
          }
        }
      },
      {
        "title": "CodingAgent - Logging",
        "properties": {
          "codingagent.logging.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable logging of AI communication"
          },
          "codingagent.logging.filePath": {
            "type": "string",
            "default": "",
            "description": "Path to log file (empty = workspace/.codingagent/logs)"
          },
          "codingagent.logging.verbosity": {
            "type": "string",
            "default": "Standard",
            "enum": [
              "Minimal",
              "Standard",
              "Verbose"
            ],
            "description": "Logging verbosity level"
          },
          "codingagent.logging.logMode": {
            "type": "boolean",
            "default": false,
            "description": "Enable raw JSON logging mode for OpenAI API communication"
          },
          "codingagent.logging.logModeFilePath": {
            "type": "string",
            "default": "",
            "description": "Path to raw JSON log file (empty = workspace/.codingagent/logs/openai-raw-json.log)"
          }
        }
      },
      {
        "title": "CodingAgent - Tools & Security",
        "properties": {
          "codingagent.tools.readFileMaxLines": {
            "type": "number",
            "default": 1000,
            "minimum": 10,
            "maximum": 10000,
            "description": "Maximum number of lines that read_file tool can read in one operation",
            "scope": "window"
          },
          "codingagent.tools.autoApproveCommands": {
            "type": "string",
            "default": "",
            "description": "Comma-separated list of terminal commands that are automatically approved without user confirmation (e.g. 'ls,pwd,git status'). Use with caution.",
            "scope": "window"
          },
          "codingagent.memory.maxLines": {
            "type": "number",
            "default": 100,
            "minimum": 10,
            "maximum": 1000,
            "description": "Maximum number of lines that memory_retrieve can read in one operation",
            "scope": "window"
          },
          "codingagent.memory.maxChars": {
            "type": "number",
            "default": 10000,
            "minimum": 1000,
            "maximum": 50000,
            "description": "Maximum number of characters that memory_retrieve can read in one operation",
            "scope": "window"
          },
          "codingagent.memory.autoSafetyLimit": {
            "type": "number",
            "default": 5000,
            "minimum": 1000,
            "maximum": 10000,
            "description": "Auto-applied safety limit for large values without explicit length (in characters)",
            "scope": "window"
          },
          "codingagent.memory.largeValueThreshold": {
            "type": "number",
            "default": 10000,
            "minimum": 5000,
            "maximum": 50000,
            "description": "Threshold above which values are considered 'large' and safety limits apply (in characters)",
            "scope": "window"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.32.0",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "node-html-markdown": "^1.3.0"
  }
}
